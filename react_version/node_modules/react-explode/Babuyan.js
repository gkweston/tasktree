"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = Babuyan;

var _react = _interopRequireWildcard(require("react"));

var _gsap = _interopRequireWildcard(require("gsap"));

var _Star = _interopRequireDefault(require("./Icons/Star"));

var _Pentagon = _interopRequireDefault(require("./Icons/Pentagon"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(n); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var RADIUS = 50; //   const LINE_RADIUS = 35;

var STROKE_WIDTH = 1;
var STAR_SIZE = 90;
var PENTAGON_SIZE = 95;
var LINES = 5; //   const DURATIONS = [0.6, 1];

var TIME_LINE = null;

function Babuyan(_ref) {
  var size = _ref.size,
      delay = _ref.delay,
      repeatDelay = _ref.repeatDelay,
      repeat = _ref.repeat,
      style = _ref.style,
      onComplete = _ref.onComplete,
      onStart = _ref.onStart,
      onRepeat = _ref.onRepeat,
      className = _ref.className;
  var starRef = (0, _react.useRef)();
  var starPolygonRef = (0, _react.useRef)();
  var polygonRef = (0, _react.useRef)();
  var linesRefs = (0, _react.useRef)(_toConsumableArray(Array(5)).map(function () {
    return (0, _react.createRef)();
  }));

  var _useState = (0, _react.useState)(size),
      _useState2 = _slicedToArray(_useState, 2),
      prevSize = _useState2[0],
      setPrevSize = _useState2[1];

  var _useState3 = (0, _react.useState)(0),
      _useState4 = _slicedToArray(_useState3, 2),
      prevDelay = _useState4[0],
      setPrevDelay = _useState4[1];

  var _useState5 = (0, _react.useState)(0),
      _useState6 = _slicedToArray(_useState5, 2),
      prevRepeatDelay = _useState6[0],
      setPrevRepeatDelay = _useState6[1];

  var _useState7 = (0, _react.useState)(0),
      _useState8 = _slicedToArray(_useState7, 2),
      prevRepeat = _useState8[0],
      setPrevRepeat = _useState8[1];

  var center = (0, _react.useMemo)(function () {
    return prevSize / 2;
  }, [prevSize]);
  var animatePentagon = (0, _react.useCallback)(function () {
    var timeline = _gsap["default"].timeline();

    timeline.set(polygonRef.current, {
      attr: {
        "stroke-dasharray": "0 0 0 360",
        "stroke-dashoffset": "180"
      }
    });
    timeline.to(polygonRef.current, 1, {
      keyframes: [{
        attr: {
          "stroke-dasharray": "100 0 100 160",
          "stroke-dashoffset": "270"
        }
      }, {
        attr: {
          "stroke-dasharray": "50 260 50 0",
          "stroke-dashoffset": "360"
        }
      }, {
        attr: {
          "stroke-dasharray": "0 360 0 0",
          "stroke-dashoffset": "360"
        }
      }],
      ease: _gsap.Power4.easeInOut
    });
    return timeline;
  }, []);
  var animateStar = (0, _react.useCallback)(function () {
    var timeline = _gsap["default"].timeline();

    timeline.fromTo(starRef.current, 0.4, {
      scale: 0,
      transformOrigin: "center"
    }, {
      scale: 1,
      ease: _gsap.Power1.easeIn
    });
    timeline.fromTo(starPolygonRef.current, 0.4, {
      attr: {
        "stroke-dasharray": "177 2",
        "stroke-dashoffset": 88
      }
    }, {
      attr: {
        "stroke-dasharray": "0 179",
        "stroke-dashoffset": 0
      },
      ease: _gsap.Power1.easeOut
    }, "-=0.1");
    return timeline;
  }, []);
  var animateLines = (0, _react.useCallback)(function () {
    var timelines = [];
    var angle = 2 * Math.PI / 5;
    var prefixAngle = Math.PI / 10;
    var radius = prevSize * RADIUS / 100;
    linesRefs.current.forEach(function (ref, i) {
      var timeline = _gsap["default"].timeline();

      var x = center + radius * Math.cos(prefixAngle + i * angle);
      var y = center + radius * Math.sin(prefixAngle + i * angle);
      var start = {
        x2: x,
        y2: y
      };
      var end = {
        x1: x,
        y1: y
      };
      timeline.fromTo(ref.current, 0.5, {
        attr: start
      }, {
        attr: {
          x2: center,
          y2: center,
          ease: _gsap.Power4.easeIn
        }
      }).fromTo(ref.current, 0.5, {
        attr: end
      }, {
        attr: {
          x1: center,
          y1: center,
          ease: _gsap.Power4.easeIn
        }
      }, "-=0.3");
      timelines.push(timeline);
    });
    return timelines;
  }, [center, prevSize]);
  var explode = (0, _react.useCallback)(function () {
    var pentagonTimeline = animatePentagon();
    var starTimeline = animateStar();
    var linesTimelines = animateLines();
    TIME_LINE = _gsap["default"].timeline({
      repeat: prevRepeat,
      delay: prevDelay,
      repeatDelay: prevRepeatDelay,
      onStart: onStart,
      onComplete: onComplete,
      onRepeat: onRepeat
    });
    TIME_LINE.add(starTimeline, 0.1);
    TIME_LINE.add(linesTimelines, 0.1);
    TIME_LINE.add(pentagonTimeline, 0);
  }, [onRepeat, onStart, onComplete, prevRepeat, prevDelay, prevRepeatDelay, animatePentagon, animateStar, animateLines]);
  (0, _react.useEffect)(function () {
    if (TIME_LINE) TIME_LINE.kill();
    explode();
  }, [explode]);
  (0, _react.useEffect)(function () {
    setPrevSize(size);
    setPrevDelay(delay);
    setPrevRepeatDelay(repeatDelay);
    setPrevRepeat(repeat);
  }, [size, delay, repeatDelay, repeat]);
  return /*#__PURE__*/_react["default"].createElement("div", {
    className: className,
    style: _objectSpread({
      width: size,
      height: size,
      position: "relative"
    }, style)
  }, /*#__PURE__*/_react["default"].createElement(_Star["default"], {
    strokeWidth: 2,
    ref: starRef,
    starPolygonRef: starPolygonRef,
    strokeDasharray: "177 2",
    strokeDashoffset: "88",
    color: "#2ab7ca",
    style: {
      position: "absolute",
      top: "1%",
      left: "5%",
      width: "".concat(STAR_SIZE, "%"),
      height: "".concat(STAR_SIZE, "%"),
      transform: "scale(0)",
      transformOrigin: "center"
    }
  }), /*#__PURE__*/_react["default"].createElement(_Pentagon["default"], {
    strokeWidth: 2,
    polygonRef: polygonRef,
    strokeDashoffset: "180",
    strokeDasharray: "0 0 0 360",
    color: "#fe4a49",
    style: {
      position: "absolute",
      top: "54%",
      left: "50%",
      width: "".concat(PENTAGON_SIZE, "%"),
      height: "".concat(PENTAGON_SIZE, "%"),
      transform: "translate(-50%, -50%)"
    }
  }), /*#__PURE__*/_react["default"].createElement("svg", {
    width: prevSize,
    height: prevSize
  }, _toConsumableArray(Array(LINES)).map(function (_, i) {
    return /*#__PURE__*/_react["default"].createElement("line", {
      x1: center,
      y1: center,
      x2: center,
      y2: center,
      ref: linesRefs.current[i],
      key: i,
      strokeWidth: 2,
      stroke: "#fed766"
    });
  })));
}