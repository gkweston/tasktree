{"ast":null,"code":"export const BINDING_SET = 'HIERARCHY/BINDING/SET';\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case BINDING_SET:\n      {\n        const {\n          path,\n          createAction,\n          updateAction,\n          deleteAction,\n          clearAction\n        } = payload;\n        const options = payload.options || {};\n        return { ...state,\n          [path]: { ...options,\n            clearAction,\n            createAction,\n            deleteAction,\n            updateAction\n          }\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport const setBinding = payload => ({\n  payload,\n  type: BINDING_SET\n});\nexport default reducer;","map":{"version":3,"sources":["/Users/gkweston/Git/todo-436/src/store/hierarchy/binding.js"],"names":["BINDING_SET","reducer","state","action","type","payload","path","createAction","updateAction","deleteAction","clearAction","options","setBinding"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,uBAApB;;AAEP,MAAMC,OAAO,GAAG,YAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;AACtC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACE,SAAKJ,WAAL;AAAkB;AAChB,cAAM;AACJM,UAAAA,IADI;AAEJC,UAAAA,YAFI;AAGJC,UAAAA,YAHI;AAIJC,UAAAA,YAJI;AAKJC,UAAAA;AALI,YAMFL,OANJ;AAOA,cAAMM,OAAO,GAAGN,OAAO,CAACM,OAAR,IAAmB,EAAnC;AAEA,eAAO,EACL,GAAGT,KADE;AAEL,WAACI,IAAD,GAAQ,EACN,GAAGK,OADG;AAEND,YAAAA,WAFM;AAGNH,YAAAA,YAHM;AAINE,YAAAA,YAJM;AAKND,YAAAA;AALM;AAFH,SAAP;AAUD;;AACD;AAAS;AACP,eAAON,KAAP;AACD;AAxBH;AA0BD,CA5BD;;AA8BA,OAAO,MAAMU,UAAU,GAAGP,OAAO,KAAK;AACpCA,EAAAA,OADoC;AAEpCD,EAAAA,IAAI,EAAEJ;AAF8B,CAAL,CAA1B;AAKP,eAAeC,OAAf","sourcesContent":["export const BINDING_SET = 'HIERARCHY/BINDING/SET';\n\nconst reducer = (state = {}, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case BINDING_SET: {\n      const {\n        path,\n        createAction,\n        updateAction,\n        deleteAction,\n        clearAction\n      } = payload;\n      const options = payload.options || {};\n\n      return {\n        ...state,\n        [path]: {\n          ...options,\n          clearAction,\n          createAction,\n          deleteAction,\n          updateAction\n        }\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport const setBinding = payload => ({\n  payload,\n  type: BINDING_SET\n});\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}