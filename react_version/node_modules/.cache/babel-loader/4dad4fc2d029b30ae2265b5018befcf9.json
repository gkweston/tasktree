{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = useGSAPAnimateStroke;\n\nvar _gsap = require(\"gsap\");\n\nvar _react = require(\"react\");\n\nvar durations = [0.05, 0.3, 0.6, 0.05];\n\nfunction useGSAPAnimateStroke(_ref) {\n  var length = _ref.length,\n      totalLength = _ref.totalLength,\n      speed = _ref.speed;\n  var speeds = (0, _react.useMemo)(function () {\n    return durations.map(function (duration) {\n      return speed * duration;\n    });\n  }, [speed]);\n  return (0, _react.useCallback)(function (_ref2) {\n    var timeline = _ref2.timeline,\n        elem = _ref2.elem,\n        strokeWidth = _ref2.strokeWidth;\n    timeline.set(elem, {\n      attr: {\n        \"stroke-dasharray\": \"0 \".concat(totalLength),\n        \"stroke-dashoffset\": 0\n      }\n    });\n    timeline.fromTo(elem, speeds[0], {\n      attr: {\n        \"stroke-width\": 0\n      }\n    }, {\n      attr: {\n        \"stroke-width\": strokeWidth\n      }\n    });\n    timeline.to(elem, {\n      keyframes: [{\n        attr: {\n          \"stroke-dasharray\": \"\".concat(length, \" \").concat(totalLength - length),\n          \"stroke-dashoffset\": -20\n        },\n        duration: speeds[1],\n        ease: _gsap.Power4.easeIn\n      }, {\n        attr: {\n          \"stroke-dasharray\": \"0 \".concat(totalLength),\n          \"stroke-dashoffset\": totalLength * -1\n        },\n        duration: speeds[2],\n        ease: _gsap.Power4.easeOut\n      }]\n    }, \"<\");\n    timeline.to(elem, speeds[3], {\n      attr: {\n        \"stroke-width\": 0\n      }\n    }, \"-=\".concat((speeds[1] + speeds[2]) * 0.3));\n  }, [length, speeds, totalLength]);\n}","map":null,"metadata":{},"sourceType":"script"}