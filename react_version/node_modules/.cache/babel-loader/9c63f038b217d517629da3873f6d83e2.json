{"ast":null,"code":"var _jsxFileName = \"/Users/gkweston/Git/todo-436/src/components/Score.js\";\nimport zIndex from '@material-ui/core/styles/zIndex';\nimport React from 'react';\nimport Explosion from 'react-explode/Boracay';\nconst divStyle = {\n  backgroundColor: \"white\",\n  borderRadius: 20,\n  borderWidth: 2,\n  borderColor: 'gold',\n  margin: 10\n};\nconst h3Style = {\n  color: \"black\",\n  margin: 10,\n  zIndex: -1,\n  padding: 10\n}; // const explodeStyleContainer = {\n//   position: 'relative'\n// }\n\nconst explodeStyle = {\n  position: 'absolute',\n  marginTop: '-8em',\n  marginLeft: '-5em',\n  zIndex: 2\n}; //event listener for local storage\n\nfunction Score() {\n  const score = localStorage.getItem('score'); //(!)\n  // const [isExploding, setIsExploding] = React.useState(false);\n  // if (parseInt(score) > 30) {\n  // setIsExploding(true)\n  // }\n\n  var isExploding = false;\n\n  if (parseInt(score) > 30) {\n    isExploding = true;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: divStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, isExploding && /*#__PURE__*/React.createElement(\"div\", {\n    style: explodeStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Explosion, {\n    size: \"300\",\n    delay: 0,\n    color: \"GoldenRod\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"h3\", {\n    style: h3Style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"Score: \", score)));\n}\n\nexport default Score;","map":{"version":3,"sources":["/Users/gkweston/Git/todo-436/src/components/Score.js"],"names":["zIndex","React","Explosion","divStyle","backgroundColor","borderRadius","borderWidth","borderColor","margin","h3Style","color","padding","explodeStyle","position","marginTop","marginLeft","Score","score","localStorage","getItem","isExploding","parseInt"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,iCAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AAGA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,eAAe,EAAE,OADF;AAEfC,EAAAA,YAAY,EAAC,EAFE;AAGfC,EAAAA,WAAW,EAAC,CAHG;AAIfC,EAAAA,WAAW,EAAC,MAJG;AAKfC,EAAAA,MAAM,EAAC;AALQ,CAAjB;AAQA,MAAMC,OAAO,GAAG;AACdC,EAAAA,KAAK,EAAC,OADQ;AAEdF,EAAAA,MAAM,EAAE,EAFM;AAGdR,EAAAA,MAAM,EAAE,CAAC,CAHK;AAIdW,EAAAA,OAAO,EAAC;AAJM,CAAhB,C,CAOA;AACA;AACA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,UADS;AAEnBC,EAAAA,SAAS,EAAE,MAFQ;AAGnBC,EAAAA,UAAU,EAAE,MAHO;AAInBf,EAAAA,MAAM,EAAE;AAJW,CAArB,C,CAOA;;AACA,SAASgB,KAAT,GAAiB;AACf,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CADe,CAEf;AACA;AACA;AACE;AACF;;AAEA,MAAIC,WAAW,GAAG,KAAlB;;AACA,MAAIC,QAAQ,CAACJ,KAAD,CAAR,GAAkB,EAAtB,EAA0B;AACxBG,IAAAA,WAAW,GAAG,IAAd;AACD;;AAED,sBACE,uDACE;AAAK,IAAA,KAAK,EAAEjB,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGiB,WAAW,iBAAI;AAAK,IAAA,KAAK,EAAER,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACd,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,KAAhB;AAAsB,IAAA,KAAK,EAAE,CAA7B;AAAgC,IAAA,KAAK,EAAC,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADc,CADlB,eAIE;AAAI,IAAA,KAAK,EAAEH,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA4BQ,KAA5B,CAJF,CADF,CADF;AAUD;;AAED,eAAeD,KAAf","sourcesContent":["import zIndex from '@material-ui/core/styles/zIndex';\nimport React from 'react';\nimport Explosion from 'react-explode/Boracay'\n\n\nconst divStyle = {\n  backgroundColor: \"white\",\n  borderRadius:20,\n  borderWidth:2,\n  borderColor:'gold',\n  margin:10\n}\n  \nconst h3Style = {\n  color:\"black\",\n  margin: 10,\n  zIndex: -1,\n  padding:10\n}\n\n// const explodeStyleContainer = {\n//   position: 'relative'\n// }\nconst explodeStyle = {\n  position: 'absolute',\n  marginTop: '-8em',\n  marginLeft: '-5em',\n  zIndex: 2\n}\n\n//event listener for local storage\nfunction Score() {\n  const score = localStorage.getItem('score');\n  //(!)\n  // const [isExploding, setIsExploding] = React.useState(false);\n  // if (parseInt(score) > 30) {\n    // setIsExploding(true)\n  // }\n\n  var isExploding = false;\n  if (parseInt(score) > 30) {\n    isExploding = true\n  }\n\n  return (\n    <>\n      <div style={divStyle}>\n        {isExploding && <div style={explodeStyle}>\n          <Explosion size=\"300\" delay={0} color=\"GoldenRod\"/>\n        </div>}\n        <h3 style={h3Style}>Score: {score}</h3>\n      </div>\n    </>\n  );\n}\n\nexport default Score;\n"]},"metadata":{},"sourceType":"module"}