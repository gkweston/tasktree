{"ast":null,"code":"import _ from 'lodash';\nimport nodes from './nodes';\nimport { CREATE_NODE_PATH, CLEAR_NODES, CREATE_NODE, DELETE_NODE, UPDATE_NODE, MOVE_NODE, INDENT_NODE, MOVE_NODE_UP, UNINDENT_NODE, MOVE_NODE_DOWN } from './types';\nimport { getPathPayloadAction } from './helpers';\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    path,\n    type\n  } = action;\n\n  if (state && path && [CREATE_NODE_PATH, CLEAR_NODES, CREATE_NODE, DELETE_NODE, UPDATE_NODE, MOVE_NODE, INDENT_NODE, MOVE_NODE_UP, UNINDENT_NODE, MOVE_NODE_DOWN].includes(type)) {\n    if (type === CREATE_NODE_PATH) {\n      return { ...state,\n        [path]: {\n          root: {\n            children: [],\n            depth: -1,\n            id: 'root',\n            parent: undefined\n          }\n        }\n      };\n    }\n\n    if (type === UPDATE_NODE) {\n      const {\n        payload\n      } = action;\n\n      if (payload && (_.has(payload, 'parent') || _.has(payload, 'at') || _.has(payload, 'first') || _.has(payload, 'before') || _.has(payload, 'after') || _.has(payload, 'afterIndex') || _.has(payload, 'beforeIndex'))) {\n        return { ...state,\n          [path]: nodes(state[path], action)\n        };\n      }\n\n      return state;\n    }\n\n    return { ...state,\n      [path]: nodes(state[path], action)\n    };\n  }\n\n  return state;\n});\nexport const createNodePath = path => ({\n  path,\n  type: CREATE_NODE_PATH\n});\nexport const createNode = getPathPayloadAction(CREATE_NODE);\nexport const updateNode = getPathPayloadAction(UPDATE_NODE);\nexport const deleteNode = getPathPayloadAction(DELETE_NODE);\nexport const clearNodes = getPathPayloadAction(CLEAR_NODES);\nexport const moveNode = getPathPayloadAction(MOVE_NODE);\nexport const moveNodeUp = getPathPayloadAction(MOVE_NODE_UP);\nexport const moveNodeDown = getPathPayloadAction(MOVE_NODE_DOWN);\nexport const indentNode = getPathPayloadAction(INDENT_NODE);\nexport const unindentNode = getPathPayloadAction(UNINDENT_NODE);","map":{"version":3,"sources":["/Users/gkweston/Git/todo-436/src/store/hierarchy/nodes/index.js"],"names":["_","nodes","CREATE_NODE_PATH","CLEAR_NODES","CREATE_NODE","DELETE_NODE","UPDATE_NODE","MOVE_NODE","INDENT_NODE","MOVE_NODE_UP","UNINDENT_NODE","MOVE_NODE_DOWN","getPathPayloadAction","state","action","path","type","includes","root","children","depth","id","parent","undefined","payload","has","createNodePath","createNode","updateNode","deleteNode","clearNodes","moveNode","moveNodeUp","moveNodeDown","indentNode","unindentNode"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport nodes from './nodes';\nimport {\n  CREATE_NODE_PATH,\n  CLEAR_NODES,\n  CREATE_NODE,\n  DELETE_NODE,\n  UPDATE_NODE,\n  MOVE_NODE,\n  INDENT_NODE,\n  MOVE_NODE_UP,\n  UNINDENT_NODE,\n  MOVE_NODE_DOWN\n} from './types';\nimport { getPathPayloadAction } from './helpers';\n\nexport default (state = {}, action) => {\n  const { path, type } = action;\n\n  if (\n    state &&\n    path &&\n    [\n      CREATE_NODE_PATH,\n      CLEAR_NODES,\n      CREATE_NODE,\n      DELETE_NODE,\n      UPDATE_NODE,\n      MOVE_NODE,\n      INDENT_NODE,\n      MOVE_NODE_UP,\n      UNINDENT_NODE,\n      MOVE_NODE_DOWN\n    ].includes(type)\n  ) {\n    if (type === CREATE_NODE_PATH) {\n      return {\n        ...state,\n        [path]: {\n          root: {\n            children: [],\n            depth: -1,\n            id: 'root',\n            parent: undefined\n          }\n        }\n      };\n    }\n\n    if (type === UPDATE_NODE) {\n      const { payload } = action;\n      if (\n        payload &&\n        (_.has(payload, 'parent') ||\n          _.has(payload, 'at') ||\n          _.has(payload, 'first') ||\n          _.has(payload, 'before') ||\n          _.has(payload, 'after') ||\n          _.has(payload, 'afterIndex') ||\n          _.has(payload, 'beforeIndex'))\n      ) {\n        return { ...state, [path]: nodes(state[path], action) };\n      }\n      return state;\n    }\n\n    return { ...state, [path]: nodes(state[path], action) };\n  }\n\n  return state;\n};\n\nexport const createNodePath = path => ({\n  path,\n  type: CREATE_NODE_PATH\n});\n\nexport const createNode = getPathPayloadAction(CREATE_NODE);\n\nexport const updateNode = getPathPayloadAction(UPDATE_NODE);\n\nexport const deleteNode = getPathPayloadAction(DELETE_NODE);\n\nexport const clearNodes = getPathPayloadAction(CLEAR_NODES);\n\nexport const moveNode = getPathPayloadAction(MOVE_NODE);\n\nexport const moveNodeUp = getPathPayloadAction(MOVE_NODE_UP);\n\nexport const moveNodeDown = getPathPayloadAction(MOVE_NODE_DOWN);\n\nexport const indentNode = getPathPayloadAction(INDENT_NODE);\n\nexport const unindentNode = getPathPayloadAction(UNINDENT_NODE);\n"]},"metadata":{},"sourceType":"module"}