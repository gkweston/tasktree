{"ast":null,"code":"var _jsxFileName = \"/Users/gkweston/Git/todo-436/src/components/Layout/Footer.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport AddIcon from '@material-ui/icons/AddCircleRounded';\nimport PlaylistAdd from '@material-ui/icons/PlaylistAdd'; // import PlaylistAddCheck from '@material-ui/icons/PlaylistAddCheck';\n\nimport { createNode, clearNodes } from '../../store/hierarchy/nodes';\nimport { clearCompleted } from '../../store/tasks/actions';\n\nconst Footer = _ref => {\n  let {\n    createNode,\n    clearNodes,\n    clearCompleted\n  } = _ref;\n\n  const addClick = () => {\n    createNode({\n      data: {\n        text: ''\n      }\n    });\n  };\n\n  const newClick = () => {\n    clearNodes();\n    localStorage.setItem('score', '0');\n  }; // const clearClick = () => {\n  //   clearCompleted();\n  // };\n\n\n  return /*#__PURE__*/React.createElement(BottomNavigation, {\n    style: {\n      backgroundColor: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BottomNavigationAction, {\n    label: \"Add Task\",\n    showLabel: true,\n    onClick: addClick,\n    icon: /*#__PURE__*/React.createElement(AddIcon, {\n      style: {\n        color: '#173679'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(BottomNavigationAction, {\n    label: \"New List\",\n    showLabel: true,\n    onClick: newClick,\n    icon: /*#__PURE__*/React.createElement(PlaylistAdd, {\n      style: {\n        color: '#173679'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createNode: payload => dispatch(createNode('tasks', payload)),\n    clearNodes: () => dispatch(clearNodes('tasks')),\n    clearCompleted: () => dispatch(clearCompleted())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Footer);","map":{"version":3,"sources":["/Users/gkweston/Git/todo-436/src/components/Layout/Footer.js"],"names":["React","connect","BottomNavigation","BottomNavigationAction","AddIcon","PlaylistAdd","createNode","clearNodes","clearCompleted","Footer","addClick","data","text","newClick","localStorage","setItem","backgroundColor","color","mapDispatchToProps","dispatch","payload"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,sBAAP,MAAmC,0CAAnC;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,WAAP,MAAwB,gCAAxB,C,CACA;;AACA,SACEC,UADF,EAEEC,UAFF,QAGO,6BAHP;AAIA,SAASC,cAAT,QAA+B,2BAA/B;;AAEA,MAAMC,MAAM,GAAG,QAAgD;AAAA,MAA/C;AAAEH,IAAAA,UAAF;AAAcC,IAAAA,UAAd;AAA0BC,IAAAA;AAA1B,GAA+C;;AAC7D,QAAME,QAAQ,GAAG,MAAM;AACrBJ,IAAAA,UAAU,CAAC;AACTK,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE;AADF;AADG,KAAD,CAAV;AAKD,GAND;;AAQA,QAAMC,QAAQ,GAAG,MAAM;AACrBN,IAAAA,UAAU;AACVO,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8B,GAA9B;AACD,GAHD,CAT6D,CAc7D;AACA;AACA;;;AACA,sBACE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,sBAAD;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,OAAO,EAAEN,QAHX;AAIE,IAAA,IAAI,eAAE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE;AAAEO,QAAAA,KAAK,EAAC;AAAR,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAaE,oBAAC,sBAAD;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,OAAO,EAAEJ,QAHX;AAIE,IAAA,IAAI,eAAE,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAE;AAAEI,QAAAA,KAAK,EAAC;AAAR,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF;AAsBD,CAvCD;;AAyCA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLb,IAAAA,UAAU,EAAEc,OAAO,IAAID,QAAQ,CAACb,UAAU,CAAC,OAAD,EAAUc,OAAV,CAAX,CAD1B;AAELb,IAAAA,UAAU,EAAE,MAAMY,QAAQ,CAACZ,UAAU,CAAC,OAAD,CAAX,CAFrB;AAGLC,IAAAA,cAAc,EAAE,MAAMW,QAAQ,CAACX,cAAc,EAAf;AAHzB,GAAP;AAKD,CAND;;AAQA,eAAeP,OAAO,CACpB,IADoB,EAEpBiB,kBAFoB,CAAP,CAGbT,MAHa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport AddIcon from '@material-ui/icons/AddCircleRounded';\nimport PlaylistAdd from '@material-ui/icons/PlaylistAdd';\n// import PlaylistAddCheck from '@material-ui/icons/PlaylistAddCheck';\nimport {\n  createNode,\n  clearNodes\n} from '../../store/hierarchy/nodes';\nimport { clearCompleted } from '../../store/tasks/actions';\n\nconst Footer = ({ createNode, clearNodes, clearCompleted }) => {\n  const addClick = () => {\n    createNode({\n      data: {\n        text: ''\n      }\n    });\n  };\n\n  const newClick = () => {\n    clearNodes();\n    localStorage.setItem('score', '0');\n  };\n\n  // const clearClick = () => {\n  //   clearCompleted();\n  // };\n  return (\n    <BottomNavigation style={{ backgroundColor: 'white' }}>\n      <BottomNavigationAction\n        label='Add Task'\n        showLabel\n        onClick={addClick}\n        icon={<AddIcon style={{ color:'#173679' }} />}\n      />\n      {/* <BottomNavigationAction\n        label='Clear Completed'\n        showLabel\n        onClick={clearClick}\n        icon={<PlaylistAddCheck style={{ color:'#450B8F' }} />}\n      /> */}\n      <BottomNavigationAction\n        label='New List'\n        showLabel\n        onClick={newClick}\n        icon={<PlaylistAdd style={{ color:'#173679' }} />}\n      />\n    </BottomNavigation>\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createNode: payload => dispatch(createNode('tasks', payload)),\n    clearNodes: () => dispatch(clearNodes('tasks')),\n    clearCompleted: () => dispatch(clearCompleted())\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Footer);\n"]},"metadata":{},"sourceType":"module"}