{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = Ticao;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _gsap = _interopRequireWildcard(require(\"gsap\"));\n\nvar _Circle = _interopRequireDefault(require(\"./Icons/Circle\"));\n\nvar _useGSAPAnimateStroke = _interopRequireDefault(require(\"./hooks/useGSAPAnimateStroke\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar LINES_LENGTH = 4;\nvar LINE_LENGTH = 30;\nvar LINE_TOTAL_LENGTH = 60;\nvar CIRCLES_LENGTH = 4;\nvar CIRCLE_SIZE = 20;\nvar LINES_SIZE = 25;\nvar CIRCLE_RADIUS = 30;\nvar LINES_RADIUS = 30;\nvar CIRCLE_LINES_LENGTH = 9;\nvar ANGLE = Math.PI / 2;\nvar PREFIX_ANGLE = Math.PI / 4;\nvar LINE_STROKE_WIDTH = 1;\nvar CIRCLE_STROKE_WIDTH = 2;\nvar TIME_LINE;\n\nfunction GrandUnit(_ref) {\n  var linesCenter = _ref.linesCenter,\n      index = _ref.index,\n      lineRef = _ref.lineRef;\n  var x = (0, _react.useMemo)(function () {\n    return linesCenter + Math.cos(index * (2 * Math.PI / 9)) * linesCenter;\n  }, [index, linesCenter]);\n  var y = (0, _react.useMemo)(function () {\n    return linesCenter + Math.sin(index * (2 * Math.PI / 9)) * linesCenter;\n  }, [linesCenter, index]);\n  return /*#__PURE__*/_react[\"default\"].createElement(\"line\", {\n    key: index,\n    x1: linesCenter,\n    y1: linesCenter,\n    x2: x,\n    y2: y,\n    stroke: \"#2ab7ca\",\n    ref: lineRef\n  });\n}\n\nfunction Unit(_ref2) {\n  var size = _ref2.size,\n      index = _ref2.index,\n      circlesRefs = _ref2.circlesRefs,\n      circleLinesRefs = _ref2.circleLinesRefs;\n  var center = size / 2;\n  var x = (0, _react.useMemo)(function () {\n    return Math.cos(index * ANGLE);\n  }, [index]);\n  var y = (0, _react.useMemo)(function () {\n    return Math.sin(index * ANGLE);\n  }, [index]);\n  var circleSize = (0, _react.useMemo)(function () {\n    return size * CIRCLE_SIZE / 100;\n  }, [size]);\n  var linesSize = (0, _react.useMemo)(function () {\n    return size * LINES_SIZE / 100;\n  }, [size]);\n  var circleRadius = (0, _react.useMemo)(function () {\n    return size * CIRCLE_RADIUS / 100;\n  }, [size]);\n  var linesRadius = (0, _react.useMemo)(function () {\n    return size * LINES_RADIUS / 100;\n  }, [size]);\n  var circleCenter = circleSize / 2;\n  var linesCenter = linesSize / 2;\n  return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_Circle[\"default\"], {\n    shapeRef: circlesRefs.current[index],\n    color: \"#fe4a49\",\n    style: {\n      position: \"absolute\",\n      top: center - circleCenter + y * circleRadius,\n      left: center - circleCenter + x * circleRadius,\n      width: \"\".concat(CIRCLE_SIZE, \"%\"),\n      height: \"\".concat(CIRCLE_SIZE, \"%\")\n    }\n  }), /*#__PURE__*/_react[\"default\"].createElement(\"svg\", {\n    style: {\n      position: \"absolute\",\n      width: \"\".concat(LINES_SIZE, \"%\"),\n      height: \"\".concat(LINES_SIZE, \"%\"),\n      top: center - linesCenter + y * linesRadius,\n      left: center - linesCenter + x * linesRadius\n    }\n  }, Array.from(Array(CIRCLE_LINES_LENGTH)).map(function (_, j) {\n    return /*#__PURE__*/_react[\"default\"].createElement(GrandUnit, {\n      key: j + CIRCLE_LINES_LENGTH * index,\n      index: j,\n      linesCenter: linesCenter,\n      lineRef: circleLinesRefs.current[j + CIRCLE_LINES_LENGTH * index]\n    });\n  })));\n}\n\nfunction Line(_ref3) {\n  var size = _ref3.size,\n      index = _ref3.index,\n      lineRef = _ref3.lineRef,\n      lineTotalLength = _ref3.lineTotalLength;\n  var center = size / 2;\n  var circleSize = (0, _react.useMemo)(function () {\n    return size * CIRCLE_SIZE / 100;\n  }, [size]);\n  var circleRadius = (0, _react.useMemo)(function () {\n    return size * CIRCLE_RADIUS / 100;\n  }, [size]);\n  var circleCenter = circleSize / 2;\n  var radius = circleRadius - circleCenter + 5;\n  var x = center - lineTotalLength / 2 + Math.cos(PREFIX_ANGLE + index * ANGLE) * radius;\n  var y = center - 5 / 2 + Math.sin(PREFIX_ANGLE + index * ANGLE) * radius;\n  return /*#__PURE__*/_react[\"default\"].createElement(\"svg\", {\n    key: index,\n    width: lineTotalLength,\n    height: 5,\n    style: {\n      top: y,\n      left: x,\n      position: \"absolute\",\n      transform: \" rotate(\".concat(135 + 90 * index, \"deg)\")\n    }\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"line\", {\n    ref: lineRef,\n    strokeWidth: 0,\n    strokeDasharray: \"0 \".concat(lineTotalLength),\n    x1: \"0\",\n    y1: \"50%\",\n    x2: \"100%\",\n    y2: \"50%\",\n    stroke: \"#fed766\",\n    strokeLinecap: \"round\"\n  }));\n}\n\nfunction Ticao(_ref4) {\n  var size = _ref4.size,\n      delay = _ref4.delay,\n      repeatDelay = _ref4.repeatDelay,\n      repeat = _ref4.repeat,\n      style = _ref4.style,\n      onComplete = _ref4.onComplete,\n      onStart = _ref4.onStart,\n      onRepeat = _ref4.onRepeat,\n      className = _ref4.className;\n  var linesRefs = (0, _react.useRef)(_toConsumableArray(Array(LINES_LENGTH)).map(function () {\n    return (0, _react.createRef)();\n  }));\n  var circleLinesRefs = (0, _react.useRef)(_toConsumableArray(Array(CIRCLE_LINES_LENGTH * 4)).map(function () {\n    return (0, _react.createRef)();\n  }));\n  var circlesRefs = (0, _react.useRef)(_toConsumableArray(Array(CIRCLES_LENGTH)).map(function () {\n    return (0, _react.createRef)();\n  }));\n\n  var _useState = (0, _react.useState)(size),\n      _useState2 = _slicedToArray(_useState, 2),\n      prevSize = _useState2[0],\n      setPrevSize = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      prevDelay = _useState4[0],\n      setPrevDelay = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      prevRepeatDelay = _useState6[0],\n      setPrevRepeatDelay = _useState6[1];\n\n  var _useState7 = (0, _react.useState)(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      prevRepeat = _useState8[0],\n      setPrevRepeat = _useState8[1];\n\n  var lineTotalLength = (0, _react.useMemo)(function () {\n    return prevSize * LINE_TOTAL_LENGTH / 100;\n  }, [prevSize]);\n  var lineStrokeWidth = (0, _react.useMemo)(function () {\n    return prevSize * LINE_STROKE_WIDTH / 100;\n  }, [prevSize]);\n  var linesSize = (0, _react.useMemo)(function () {\n    return prevSize * LINES_SIZE / 100;\n  }, [prevSize]);\n  var lineLength = (0, _react.useMemo)(function () {\n    return prevSize * LINE_LENGTH / 100;\n  }, [prevSize]);\n  var animateStroke = (0, _useGSAPAnimateStroke[\"default\"])({\n    length: lineLength,\n    totalLength: lineTotalLength,\n    speed: 1.3\n  });\n  var animateLines = (0, _react.useCallback)(function () {\n    var timelines = [];\n    linesRefs.current.forEach(function (ref, i) {\n      var timeline = _gsap[\"default\"].timeline({\n        delay: 0.07 * i\n      });\n\n      animateStroke({\n        elem: ref.current,\n        timeline: timeline,\n        strokeWidth: lineStrokeWidth\n      });\n      timelines.push(timeline);\n    });\n    return timelines;\n  }, [animateStroke, lineStrokeWidth]);\n  var animateCircles = (0, _react.useCallback)(function () {\n    var timelines = [];\n    var strokeWidth = prevSize * CIRCLE_STROKE_WIDTH / 100;\n    circlesRefs.current.forEach(function (ref, i) {\n      var timeline = _gsap[\"default\"].timeline({\n        delay: 0.08 * i\n      });\n\n      timeline.set(ref.current, {\n        attr: {\n          \"stroke-width\": 20\n        },\n        scale: 0\n      });\n      timeline.set(ref.current, {\n        opacity: 1\n      });\n      timeline.fromTo(ref.current, 0.5, {\n        attr: {\n          \"stroke-width\": 20\n        },\n        scale: 0,\n        transformOrigin: \"center\"\n      }, {\n        attr: {\n          \"stroke-width\": strokeWidth\n        },\n        scale: 1,\n        ease: _gsap.Power4.easeInOut\n      });\n      timeline.to(ref.current, 0.5, {\n        attr: {\n          \"stroke-width\": 0\n        },\n        ease: _gsap.Power4.easeInOut\n      }, \"-=0.45\");\n      timeline.fromTo(ref.current, 0.4, {\n        opacity: 1\n      }, {\n        opacity: 0,\n        ease: _gsap.Power4.easeInOut\n      }, \"-=0.3\");\n      timelines.push(timeline);\n    });\n    return timelines;\n  }, [prevSize]);\n  var animateCircleLines = (0, _react.useCallback)(function () {\n    var timelines = [];\n    circleLinesRefs.current.forEach(function (ref, i) {\n      var radius = linesSize / 2;\n      var angle = 2 * Math.PI / 9;\n      var x = radius + radius * Math.cos(i * angle);\n      var y = radius + radius * Math.sin(i * angle);\n      var start = {\n        x2: x,\n        y2: y\n      };\n      var end = {\n        x1: x,\n        y1: y\n      };\n\n      var timeline = _gsap[\"default\"].timeline({\n        delay: 0.08 * Math.floor(i / 9)\n      });\n\n      timeline.fromTo(ref.current, 0.7, {\n        attr: {\n          x2: radius,\n          y2: radius\n        }\n      }, {\n        attr: start,\n        ease: _gsap.Power4.easeInOut\n      }).fromTo(ref.current, 0.6, {\n        attr: {\n          x1: radius,\n          y1: radius\n        }\n      }, {\n        attr: end,\n        ease: _gsap.Power4.easeInOut\n      }, \"-=0.6\");\n      timelines.push(timeline);\n    });\n    return timelines;\n  }, [linesSize]);\n  var explode = (0, _react.useCallback)(function () {\n    var linesRefs = animateLines();\n    var circlesRefs = animateCircles();\n    var circleLinesRefs = animateCircleLines();\n    TIME_LINE = _gsap[\"default\"].timeline({\n      repeat: prevRepeat,\n      delay: prevDelay,\n      repeatDelay: prevRepeatDelay,\n      onStart: onStart,\n      onComplete: onComplete,\n      onRepeat: onRepeat\n    });\n    TIME_LINE.add(linesRefs, 0);\n    TIME_LINE.add(circlesRefs, 0.15);\n    TIME_LINE.add(circleLinesRefs, 0.15);\n  }, [animateCircles, animateLines, animateCircleLines, onComplete, onStart, onRepeat, prevRepeat, prevDelay, prevRepeatDelay]);\n  (0, _react.useEffect)(function () {\n    if (TIME_LINE) TIME_LINE.kill();\n    explode();\n  }, [explode]);\n  (0, _react.useEffect)(function () {\n    setPrevSize(size);\n    setPrevDelay(delay);\n    setPrevRepeatDelay(repeatDelay);\n    setPrevRepeat(repeat);\n  }, [size, delay, repeatDelay, repeat]);\n  return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: className,\n    style: _objectSpread({\n      width: prevSize,\n      height: prevSize,\n      position: \"relative\"\n    }, style)\n  }, linesRefs.current.map(function (ref, i) {\n    return /*#__PURE__*/_react[\"default\"].createElement(Line, {\n      key: i,\n      index: i,\n      lineRef: ref,\n      size: prevSize,\n      strokeWidth: lineStrokeWidth,\n      lineTotalLength: lineTotalLength\n    });\n  }), Array.from(Array(4)).map(function (_, i) {\n    return /*#__PURE__*/_react[\"default\"].createElement(Unit, {\n      key: i,\n      index: i,\n      circleLinesRefs: circleLinesRefs,\n      circlesRefs: circlesRefs,\n      size: prevSize\n    });\n  }));\n}","map":null,"metadata":{},"sourceType":"script"}